[{"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\index.js":"1","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\App.js":"2","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\reportWebVitals.js":"3","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\shared\\Spinner.js":"4","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Home\\Home.js":"5","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Auth\\Auth.js":"6","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Nav\\Navbar.js":"7","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Joke\\Joke.js":"8"},{"size":517,"mtime":1608513234464,"results":"9","hashOfConfig":"10"},{"size":1029,"mtime":1608534258654,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1608513234465,"results":"12","hashOfConfig":"10"},{"size":159,"mtime":1608517501227,"results":"13","hashOfConfig":"10"},{"size":103,"mtime":1608525123816,"results":"14","hashOfConfig":"10"},{"size":756,"mtime":1608529475322,"results":"15","hashOfConfig":"10"},{"size":571,"mtime":1608531321107,"results":"16","hashOfConfig":"10"},{"size":1108,"mtime":1608533675579,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1khpqgq",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\index.js",[],"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\App.js",[],"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\reportWebVitals.js",[],"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\shared\\Spinner.js",[],["37","38"],"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Home\\Home.js",[],"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Auth\\Auth.js",[],"G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Nav\\Navbar.js",["39","40","41","42"],"import React, { useState } from \"react\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  return (\r\n    <div id=\"nav-container\">\r\n      <ul className=\"navbar\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/sign-in\">LOGIN</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/sign-up\">REGISTER</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","G:\\Documents\\Code Immersives\\Work\\Term 2\\week-16\\joke-react-app\\src\\components\\Joke\\Joke.js",["43"],"import React, { useState } from \"react\";\r\n\r\nimport \"./Joke.css\";\r\n\r\nconst Joke = () => {\r\n  const [joke, setJoke] = useState(\r\n    \"Welcome to the joke generator. I'll tell ya some punny jokes.\"\r\n  );\r\n\r\n  const [setup, setSetup] = useState(\"\");\r\n  const [isTwoParter, setIsTwoParter] = useState(false);\r\n\r\n  const fetchJoke = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://sv443.net/jokeapi/v2/joke/Pun?blacklistFlags=nsfw,political,racist,sexist`\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw \"An error occurred.\";\r\n      }\r\n\r\n      if (data.type === \"twopart\") {\r\n        setIsTwoParter(true);\r\n        setSetup(data.setup);\r\n        setJoke(data.delivery);\r\n      } else {\r\n        setIsTwoParter(false);\r\n        setSetup(\"\");\r\n        setJoke(data.joke);\r\n      }\r\n\r\n      console.log(data);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div id=\"joke-container\">\r\n      {isTwoParter ? setup : \"\"}\r\n      <p>{joke}</p>\r\n      <button onClick={fetchJoke}>Get Joke</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":10,"nodeType":"50","messageId":"51","endLine":7,"endColumn":20},{"ruleId":"48","severity":1,"message":"52","line":7,"column":22,"nodeType":"50","messageId":"51","endLine":7,"endColumn":35},{"ruleId":"48","severity":1,"message":"53","line":8,"column":10,"nodeType":"50","messageId":"51","endLine":8,"endColumn":14},{"ruleId":"48","severity":1,"message":"54","line":8,"column":16,"nodeType":"50","messageId":"51","endLine":8,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":22,"column":9,"nodeType":"57","messageId":"58","endLine":22,"endColumn":36},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'setIsLoggedIn' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]